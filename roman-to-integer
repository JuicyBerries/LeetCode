My solution :

class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char, int> numMap;
        numMap['I'] = 1;
        numMap['V'] = 5;
        numMap['X'] = 10;
        numMap['L'] = 50;
        numMap['C'] = 100;
        numMap['D'] = 500;
        numMap['M'] = 1000;
        int ans = 0;
        
        for (int i = 0; i < s.length(); ++i) {
            if (numMap[s[i + 1]] > numMap[s[i]]) {
                ans -= numMap[s[i]];
            } else {
                ans += numMap[s[i]];
            }
        }
        return ans;
    }
};

Best solution :

class Solution {
public:
    int romanToInt(string s) {
	char roman[] = { 'I','V','X','L','C','D','M' };
	int num[] = { 1,5,10,50,100,500,1000 };
	int ans=0;
	for (int i = 0; s[i] != 0; i++)
		for (int j = 0; j < 7; j++) {
			if (s[i] == roman[j]) {
				if (j == 0 || j == 2 || j == 4) 
					if (s[i + 1] == roman[j + 1]) {
						ans += num[j + 1] - num[j];
						i++;
						break;
					}
					else if (s[i + 1] == roman[j + 2]) {
						ans += num[j + 2] - num[j];
						i++;
						break;
					}
				ans += num[j];
				break;
			}
		}
	return ans;
}
};
